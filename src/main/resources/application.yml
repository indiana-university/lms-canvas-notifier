spring:
  application:
    name: canvasnotifier
  profiles:
    active: redis
  session:
    store-type: none
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${oauth.tokenprovider.url}/.well-known/jwks.json
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        temp:
          use_jdbc_metadata_defaults: false
      jadira:
        usertype:
          autoRegisterUserTypes: true
  datasource:
    driverClassName: ${lms.db.driverClass}
    url: ${lms.db.url}
    username: ${lms.db.user}
    password: ${lms.db.password}
    type: org.springframework.jdbc.datasource.DriverManagerDataSource
  rabbitmq:
    addresses: ${lms.rabbitmq.address.${app.env}}
    username: ${lms.rabbitmq.username.${app.env}}
    password: ${lms.rabbitmq.password.${app.env}}
    virtualHost: ${lms.rabbitmq.virtualHost.${app.env}}
    listener.simple.retry:
      enabled: true
      initial-interval: 3s
      max-attempts: 3
      max-interval: 10s
      multiplier: 2
canvasnotifier:
  version: @app.version@
  env: ${app.env}
  batchNotificationEmail: iu-uits-es-ess-lms-notify@exchange@iu.edu,lms-func-l@iu.edu
  canvasNotifierQueueName: notifier_${app.env}
server:
  error:
    whitelabel:
      enabled: false
  servlet:
    session:
      timeout: 30m

---

spring:
  profiles: redis
  session:
    store-type: redis
    redis.namespace: canvasnotifier-${app.version}:session